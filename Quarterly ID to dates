let
    Source = Sql.Databases("sql2016p.xxxxxxxx.xxxxx"),
    SPRING = Source{[Name="SPRING"]}[Data],
    Report_QSRS_AllData_Last4Years = SPRING{[Schema="Report",Item="QSRS_AllData_Last4Years"]}[Data],
    #"Removed Columns" = Table.RemoveColumns(Report_QSRS_AllData_Last4Years,{"OthersDesc", "PrivateLabelDesc", "LocalProductDesc", "MarketDefinitionDesc", "StabilityDesc", "SuperCategoryDesc"}),
    #"Renamed Columns" = Table.RenameColumns(#"Removed Columns",{{"CalorieRatingDesc", "Calorie Rating"}, {"CarbonationDesc", "Carbonation Indicator"}, {"CategoryDesc", "Category"}, {"CategoryGroupDesc", "Category Group"}, {"ContainsCaffeineDesc", "Contains Caffeine"}, {"FlavourCategoryDesc", "Flavour Category"}, {"FlavourDesc", "Flavour"}, {"FlavourGroupDesc", "Flavour Group"}, {"FlavourSuperCategoryDesc", "Flavour Super Category"}, {"FunctionalDesc", "Functional Desc"}, {"IngredientsBaseDesc", "Ingredients Base"}, {"ItemCode", "Item Code"}, {"ItemDesc", "Item"}, {"JuiceContentBandDesc", "Juice Content Band"}, {"NotFromConcentrateDesc", "Not From Concentrate"}, {"PackMaterialDesc", "Pack Material"}, {"PackSizeDesc", "Pack Size"}, {"PackSizeUnitDesc", "Pack Size Unit"}, {"PackTypeDesc", "Pack Type"}, {"PhysicalStateDesc", "Physical State"}, {"RefillableDesc", "Refillable Indicator"}, {"ShelfStateDesc", "Shelf State"}, {"TrademarkBrandDesc", "Trademark Brand"}, {"UmbrellaBrandDesc", "Umbrella Brand"}, {"WaterSourceDesc", "Water Source"}, {"CountryDesc", "Country"}, {"CompanyDesc", "Brand Owner"}}),
    PeriodID1 = #"Renamed Columns"[PeriodID],
    #"Removed Duplicates" = List.Distinct(PeriodID1),
    #"Converted to Table" = Table.FromList(#"Removed Duplicates", Splitter.SplitByNothing(), null, null, ExtraValues.Error),
    #"Changed Type4" = Table.TransformColumnTypes(#"Converted to Table",{{"Column1", Int64.Type}}),
    #"Duplicated Column" = Table.DuplicateColumn(#"Changed Type4", "Column1", "Column1 - Copy"),
    #"Split Column by Position" = Table.SplitColumn(Table.TransformColumnTypes(#"Duplicated Column", {{"Column1 - Copy", type text}}, "en-GB"), "Column1 - Copy", Splitter.SplitTextByPositions({0, 4}, false), {"Column1 - Copy.1", "Column1 - Copy.2"}),
    #"Changed Type" = Table.TransformColumnTypes(#"Split Column by Position",{{"Column1 - Copy.1", Int64.Type}, {"Column1 - Copy.2", Int64.Type}}),
    #"Extracted First Characters" = Table.TransformColumns(#"Changed Type", {{"Column1 - Copy.2", each Text.Start(Text.From(_, "en-GB"), 1), type text}}),
    #"Renamed Columns1" = Table.RenameColumns(#"Extracted First Characters",{{"Column1", "PeriodID"}, {"Column1 - Copy.1", "Year"}, {"Column1 - Copy.2", "Quarter Num"}}),
    #"Changed Type1" = Table.TransformColumnTypes(#"Renamed Columns1",{{"Quarter Num", Int64.Type}}),
    Quarter = Table.AddColumn(#"Changed Type1", "Quarter", each "Q" & Number.ToText ([Quarter Num])),
    Period = Table.AddColumn(Quarter, "Period", each Number.ToText([Year])&[Quarter]),
    #"Reordered Columns" = Table.ReorderColumns(Period,{"PeriodID", "Period", "Year", "Quarter Num", "Quarter"}),
    #"Changed Type2" = Table.TransformColumnTypes(#"Reordered Columns",{{"Period", type text}, {"Quarter", type text}, {"Year", type text}}),
    
    
    #"Added Custom" = Table.AddColumn(#"Changed Type2", "Start Date", each #date (Number.FromText ([Year]), //remove'Number.FromText' if year is formatted as integer
if Text.End ([Quarter],1) = "1" then 1 else 
if Text.End ([Quarter],1) = "2" then 4 else 
if Text.End ([Quarter],1) = "3" then 7 else 
10
,1)),
    #"Added Custom1" = Table.AddColumn(#"Added Custom", "End Date", each Date.EndOfQuarter(
    #date (Number.FromText ([Year]), //remove'Number.FromText' if year is formatted as integer
if Text.End ([Quarter],1) = "1" then 1 else 
if Text.End ([Quarter],1) = "2" then 4 else 
if Text.End ([Quarter],1) = "3" then 7 else 
10
,1)
)),
    #"Changed Type3" = Table.TransformColumnTypes(#"Added Custom1",{{"Start Date", type date}, {"End Date", type date}})
in
    #"Changed Type3"
